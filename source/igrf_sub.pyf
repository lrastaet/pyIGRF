!    -*- f90 -*-
! Note: the context of this file is case sensitive.

! f2py igrf_sub.for -m igrf -h igrf_sub.pyf
! f2py -c igrf_sub.pyf igrf_sub.for

python module igrf ! in 
    interface  ! in :igrf
        subroutine igrf_sub(xlat,xlong,year,height,dirdata,xl,icode,dip,dec) ! in :igrf:igrf_sub.for
            real intent(in) :: xlat
            real intent(in) :: xlong
            real intent(in) :: year
            real intent(in) :: height
            character*256 intent(in) :: dirdata
            real intent(out) :: xl
            integer intent(out) :: icode
            real intent(out) :: dip
            real intent(out) :: dec
            real :: umr
            real :: era
            real :: aquad
            real :: bquad
            character*256 :: dirdata1
            common /gener/ umr,era,aquad,bquad
            common /folders/ dirdata1
        end subroutine igrf_sub
        subroutine findb0(stps,bdel,value,bequ,rr0) ! in :igrf:igrf_sub.for
            real :: stps
            real :: bdel
            logical :: value
            real :: bequ
            real :: rr0
            real dimension(3) :: sp
            common /fidb0/ sp
        end subroutine findb0
        subroutine shellg(glat,glon,alt,dimo,fl,icode,b0) ! in :igrf:igrf_sub.for
            real :: glat
            real :: glon
            real :: alt
            real :: dimo
            real :: fl
            integer :: icode
            real :: b0
            real :: umr
            real :: era
            real :: aquad
            real :: bquad
            real dimension(3) :: sp
            real dimension(3) :: x
            real dimension(196) :: h
            real dimension(3) :: v
            common /gener/ umr,era,aquad,bquad
            common /fidb0/ sp
            common /igrf2/ x,h
            entry shellc(v,fl,b0)
        end subroutine shellg
        subroutine stoer(p,bq,r) ! in :igrf:igrf_sub.for
            real dimension(7) :: p
            real :: bq
            real :: r
            real dimension(3) :: xi
            real dimension(196) :: h
            common /igrf2/ xi,h
        end subroutine stoer
        subroutine feldg(glat,glon,alt,bnorth,beast,bdown,babs) ! in :igrf:igrf_sub.for
            real :: glat
            real :: glon
            real :: alt
            real :: bnorth
            real :: beast
            real :: bdown
            real :: babs
            real :: umr
            real :: era
            real :: aquad
            real :: bquad
            real dimension(3) :: xi
            real dimension(196) :: h
            character*13 :: name
            integer :: nmax
            real :: time
            real dimension(196) :: g
            real dimension(3) :: b
            real dimension(3) :: v
            common /gener/ umr,era,aquad,bquad
            common /igrf2/ xi,h
            common /model/ name,nmax,time,g
            entry feldi()
            entry feldc(v,b)
        end subroutine feldg
        subroutine feldcof(year,dimo) ! in :igrf:igrf_sub.for
            real :: year
            real :: dimo
            real :: umr
            real :: erad
            real :: aquad
            real :: bquad
            character*13 :: fil1
            integer :: nmax
            real :: time
            real dimension(196) :: gh1
            common /gener/ umr,erad,aquad,bquad
            common /model/ fil1,nmax,time,gh1
        end subroutine feldcof
        subroutine getshc(iu,fspec,nmax,erad,gh,ier) ! in :igrf:igrf_sub.for
            integer :: iu
            character*(*) :: fspec
            integer :: nmax
            real :: erad
            real dimension(196) :: gh
            integer :: ier
            character*256 :: dirdata1
            common /folders/ dirdata1
        end subroutine getshc
        subroutine intershc(date,dte1,nmax1,gh1,dte2,nmax2,gh2,nmax,gh) ! in :igrf:igrf_sub.for
            real :: date
            real :: dte1
            integer :: nmax1
            real dimension(*) :: gh1
            real :: dte2
            integer :: nmax2
            real dimension(*) :: gh2
            integer :: nmax
            real dimension(*) :: gh
        end subroutine intershc
        subroutine extrashc(date,dte1,nmax1,gh1,nmax2,gh2,nmax,gh) ! in :igrf:igrf_sub.for
            real :: date
            real :: dte1
            integer :: nmax1
            real dimension(*) :: gh1
            integer :: nmax2
            real dimension(*) :: gh2
            integer :: nmax
            real dimension(*) :: gh
        end subroutine extrashc
        subroutine initize ! in :igrf:igrf_sub.for
            real :: umr
            real :: era
            real :: aquad
            real :: bquad
            common /gener/ umr,era,aquad,bquad
        end subroutine initize
    end interface 
end python module igrf

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
